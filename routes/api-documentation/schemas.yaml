components:
  schemas:
    grocery:
      title: grocery
      required: [name, brand, category, price, stock, status]
      properties:
        name: { type: string }
        brand: { type: string }
        category: { type: string }
        categoryId: { type: string }
        price:
          type: object
          required: [value, currency]
          properties:
            value: { type: number }
            currency: { type: string }
        volume:
          type: object
          properties:
            value: { type: number }
            unit: { type: string }
        mass:
          type: object
          properties:
            value: { type: number }
            unit: { type: string }
        quantity: { type: number }
        stock: { type: number }
        status: { type: string }
        _id: { type: string }

    order:
      title: order
      required: [customerId, orderDate, groceryIds, paymentReceived, status]
      properties:
        customerId: { type: string }
        orderDate: { type: string, format: date-time }
        groceryIds:
          type: array
          items:
            type: object
            properties:
              _id: { type: string }
        totalCost:
          type: object
          properties:
            value: { type: number }
            currency: { type: string }
        paymentReceived: { type: boolean }
        paymentDate: { type: string, format: date-time }
        status: { type: string }
        _id: { type: string }

    user:
      title: user
      required: [firstName, email, password, dateRegistered, type, status]
      properties:
        firstName: { type: string }
        lastName: { type: string }
        email: { type: string }
        password: { type: string }
        contactNumber: { type: string }
        postalCode: { type: string }
        dateRegistered: { type: string, format: date-time }
        orders:
          type: array
          items:
            type: object
            properties:
              _id:
                type: string
        type: { type: string }
        status: { type: string }
        _id: { type: string }

    category:
      title: category
      required: [name, status]
      properties:
        name: { type: string }
        status: { type: string }
        groceryIds:
          type: array
          items:
            type: object
            properties:
              _id: { type: string }
        _id: { type: string }
